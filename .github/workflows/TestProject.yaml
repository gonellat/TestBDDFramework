name: TestBDDFramework - CI with SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests on ${{ matrix.browser }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [CHROME]  # You can add more later

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Install Oracle JDBC Manually
        run: |
          mvn install:install-file -Dfile=lib/ojdbc6-11.2.0.4.jar \
            -DgroupId=oracle -DartifactId=ojdbc6 -Dversion=11.2.0.4 -Dpackaging=jar

      - name: Checkout BaseAutomationFramework
        uses: actions/checkout@v3
        with:
          repository: gonellat/BaseAutomationProject
          path: base

      - name: Install BaseAutomationFramework
        working-directory: base
        run: mvn clean install -DskipTests
  
      - name: Run Tests
        run: |
          mvn clean verify -P cucumber \
            -Dcucumber.filter.tags="@XMLDemo" \
            -Denv="local" \
            -Dbrowser=${{ matrix.browser }} \
            -Dheadless=TRUE \
            -DmaxLocalInstances=1

      - name: Debug Show report directories
        if: always()
        run: |
          echo "üìÅ Listing all folders under target/"
          find target -type d

      - name: Find Latest Extent Report Folder
        if: always()
        run: |
          set -e
          if [ -d target/NewStyleReports ]; then
            latest_extent=$(ls -td target/NewStyleReports/New_Style_Report* 2>/dev/null | head -n 1)
            echo "Found: $latest_extent"
            echo "report_path=$latest_extent" >> $GITHUB_ENV
          else
            echo "‚ùå No Extent report folder found."
            echo "report_path=NONE" >> $GITHUB_ENV
          fi

      - name: Debug Report Path
        if: always()
        run: |
          echo "üîç GITHUB_ENV report_path: ${{ env.report_path }}"
  
      - name: Confirm report_path folder exists
        if: env.report_path != 'NONE'
        run: |
          echo "üìÅ Listing contents of ${{ env.report_path }}"
          ls -l ${{ env.report_path }}
    
      - name: Upload Extent Reports
        if: ${{ env.report_path != 'NONE' }}
        uses: actions/upload-artifact@v4
        with:
          name: extent-report-${{ matrix.browser }}
          path: ${{ env.report_path }}/

      - name: Upload Other Test Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.browser }}
          path: |
            target/logs/
            target/cucumber-reports/

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=gonellat_TestBDDFramework \
            -Dsonar.organization=gonellat \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -DskipTests=true
